plugins {
    id 'org.springframework.boot' version '3.1.0' apply false
    id 'io.spring.dependency-management' version '1.1.0' apply false
    id "org.asciidoctor.jvm.convert" version "3.3.2" apply false
}

allprojects {
    apply { pluginManager.apply "java" }
    apply { pluginManager.apply "io.spring.dependency-management" }
    apply { pluginManager.apply "org.springframework.boot" }
    apply { pluginManager.apply "org.asciidoctor.jvm.convert" }

    group = 'com.albert'
    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
    }

    configurations {
        asciidoctorExt
    }

    ext {
        snippetsDir = file('build/generated-snippets')
    }


    dependencies {
        // spring boot
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.0'
        implementation 'org.springframework.boot:spring-boot-starter-security:3.1.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.0'
        implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
        implementation 'org.springframework.hateoas:spring-hateoas:2.1.0'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.1.0'
        implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.0'

        // lombok
        implementation 'org.projectlombok:lombok:1.18.26'
        testImplementation 'org.projectlombok:lombok:1.18.26'
        annotationProcessor 'org.projectlombok:lombok:1.18.26'

        // mySql
        runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
        testImplementation 'org.springframework.security:spring-security-test:6.0.2'

        // querydsl
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

        // integration
        implementation 'org.springframework.boot:spring-boot-starter-integration:3.1.0'
        implementation 'org.springframework.integration:spring-integration-http:6.1.0'
        testImplementation 'org.springframework.integration:spring-integration-test:6.1.0'

        // reflections
        implementation 'org.reflections:reflections:0.9.11'

        // RestDocs
        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
    }


    asciidoctor {
        forkOptions {
            jvmArgs(
                    '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.io=ALL-UNNAMED'
            )
        }
        inputs.dir snippetsDir
        configurations 'asciidoctorExt'
        dependsOn test
    }

    tasks.register('copyDucument', Copy) {
        dependsOn asciidoctor
        from file("build/docs/asciidoc/")
        into file("src/main/resources/static/docs")
    }

    build {
        dependsOn copyDucument
    }

    test {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }
}


project(':authorization-server') {
    dependencies {
        // authorization-server
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server:3.1.0'
        implementation 'org.springframework.security:spring-security-cas:6.1.0'
    }
}

project(':api') {
    dependencies {
        implementation project(':shared')
    }
}
