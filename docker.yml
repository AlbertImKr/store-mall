version: "1.3"
services:
  # Dev

  # Dev 환경을 위한 Commerce API의 MySQL 데이터베이스
  commerce-project-api-dev-db:
    image: mysql:8.0.32
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # Dev 환경을 위한 Authorization 서버의 MySQL 데이터베이스
  commerce-project-authorization-server-dev-db:
    image: mysql:8.0.32
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # Dev 환경을 위한 Query 서버의 MySQL 데이터베이스
  commerce-project-query-dev-db:
    image: mysql:8.0.32
    ports:
      - 3309:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # Dev 환경의 Zookeeper 설정 (Kafka의 메타데이터 저장 및 클러스터 구성)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # 클라이언트와의 통신 포트
      ZOOKEEPER_TICK_TIME: 2000 # Zookeeper의 타이머 틱 시간

  # Dev 환경의 Kafka 설정 (메시지 브로커)
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper # Kafka는 Zookeeper에 종속적임
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760

  # Dev 환경의 Kafka UI 설정 (Kafka 클러스터 모니터링 도구)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest # Kafka UI 이미지
    ports:
      - "9999:8080"  # Kafka UI 포트 매핑
    environment:
      KAFKA_CLUSTERS_0_NAME: local-environment # 클러스터 이름
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092 # 부트스트랩 서버 정보
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181 # Zookeeper 연결 정보

  # Dev 환경의 Redis 설정 (인메모리 데이터 저장소)
  query-redis:
    image: redis:latest
    ports:
      - "6379:6379"

  # ----------------------------------------------------------
  # TEST

  # Test 환경을 위한 Commerce API의 MySQL 데이터베이스
  commerce-project-api-test-db:
    image: mysql:8.0.32
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: test
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # 테스트 환경의 Redis 설정
  query-redis-test:
    image: redis:latest
    ports:
      - "6380:6379"
