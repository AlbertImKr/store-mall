version: "1.2"
services:
  commerce-project-api-dev-db:
    image: mysql:8.0.32
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
  commerce-project-api-test-db:
    image: mysql:8.0.32
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: test
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
  commerce-project-authorization-server-dev-db:
    image: mysql:8.0.32
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
  commerce-project-query-dev-db:
    image: mysql:8.0.32
    ports:
      - 3309:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: testpassword
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
  keycloak:
    image: keycloak/keycloak:latest
    ports:
      - 9001:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    command:
      - start-dev
  # Zookeeper 서비스 설정
  zookeeper:
    image: confluentinc/cp-zookeeper:latest # Zookeeper 이미지
    ports:
      - "2181:2181" # Zookeeper 포트 매핑
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # 클라이언트 연결 포트
      ZOOKEEPER_TICK_TIME: 2000 # Zookeeper의 기본 시간 단위 (밀리초)
  # kafka 서비스 설정
  kafka:
    image: confluentinc/cp-kafka:latest # Kafka 이미지
    depends_on:
      - zookeeper # Zookeeper 서비스에 종속적임
    ports:
      - "9092:9092" # Kafka 포트 매핑
    environment:
      KAFKA_BROKER_ID: 1 # 브로커 ID
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # Zookeeper 연결 정보
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${DOCKER_HOST_IP:-localhost}:9092 # 광고될 리스너들
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # 리스너 보안 프로토콜 매핑
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT # 브로커 간 통신에 사용될 리스너 이름
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # 오프셋 토픽의 복제 계수
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO" # 로깅 설정
      KAFKA_MESSAGE_MAX_BYTES: 10485760 # 최대 메시지 크기
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760 # 복제본이 가져올 수 있는 최대 바이트 크기를 설정합니다
  # Kafka UI 서비스 설정
  kafka-ui:
    image: provectuslabs/kafka-ui:latest # Kafka UI 이미지
    ports:
      - "9999:8080"  # Kafka UI 포트 매핑
    environment:
      KAFKA_CLUSTERS_0_NAME: local-environment # 클러스터 이름
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092 # 부트스트랩 서버 정보
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181 # Zookeeper 연결 정보
  query-redis:
    image: redis:latest
    ports:
      - "6379:6379"
